1.抽取公共的查询基类QueryObject:
	1.1:pageSize和currentPage->提供默认的值，如：pageSize=3,currentPage=1;
	
	1.2:提供customizedQuery方法，让子类实现，然后在getQuery中回调，
																					【<warning1:注意，customizedQuery只能调用一次，定义一个变量，一次执行它；>】
	1.3：getQuery():获取查询语句
		1>:【利用变量限制只调用一次customizedQuery】
			//若是第一次，则设置查询条件语句和参数
			if(firstSet){
				customizedQuery();
				firstSet = false;
			}
		2>:利用apach.common.langs.StringUtils.join用指定字符串连接list中字符串，在之前用WHERE开头
			//为空则不需要join															【<warning2:注意，为空则不需要join>】
			if(conditions.size() == 0){
				return "";
			}
			return " WHERE " + StringUtils.join(conditions, " AND ");
	
	1.4：getParameters:获取参数集合
			public List<Object> getParameters(){
				return this.params;
			}



2.在QueryObject的子类中，覆盖父类中的定制方法：
	@Override
	public void customizedQuery() {
		if(StrUtil.hasLength(keyword)){
			String key = "%" + keyword + "%";
			addQuery("(obj.name LIKE ? or obj.email LIKE ?)", key, key);
		}
		if(deptId != null && deptId != -1){
			addQuery("obj.dept.id = ?", deptId);
		}
	}
	
	

3.在高级查询加分页中实现方法中，如EmployeeDaoImpl中的advanceQuery中：
	3.1：若查询结果为0条，则返回含空集的PageResult，PageResult中提供了返回空的PageResult的方法empty；
		if(totalCount == 0){
			return PageResult.empty(pageSize);
		}
		
	3.2：PageResult类中：(Collections.emptyList():返回空集)
		public static PageResult empty(Integer pageSize){
			return new PageResult(0 , Collections.emptyList(), pageSize, 0);
		}
		
	3.3：若出现currenPage和pageSize非法，则全部查出:
		if(currentPage > 0 && pageSize > 0){
			query.setFirstResult((currentPage - 1) * pageSize);
			query.setMaxResults(pageSize);
		}
	
		
			
			
		
